<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mall.mapper.PaymentMapper">
	<insert id="insertPayment" parameterType="com.example.mall.vo.Payment">
	    <selectKey keyProperty="paymentNo" keyColumn="payment_no" resultType="Integer" order="AFTER">
     	   SELECT LAST_INSERT_ID()
    	</selectKey>
    	
		INSERT INTO payment(
			address_no, payment_price, payment_method, payment_status
		) VALUES (
			#{addressNo}, #{paymentPrice}, #{paymentMethod}, '결제완료'
		)
	</insert>
	
	<insert id="insertOrders" parameterType="Map">
		INSERT INTO orders(
			goods_no, orders_amount, payment_no
		) VALUES (
			(SELECT goods_no FROM cart WHERE cart_no=#{cartNo})
			, (SELECT cart_amount FROM cart WHERE cart_no=#{cartNo})
			, #{paymentNo}
		)	
	</insert>
	
	<select id="selectPaymentList" parameterType="map" resultType="map">
		SELECT 
		    p.payment_no AS paymentNo
		    , p.payment_status AS paymentStatus
		    , p.payment_price AS paymentPrice
		    , p.payment_method AS paymentMethod
		    , p.create_date AS createDate
		    , IFNULL(a.customer_email, "( 회원탈퇴 고객 )") AS customerEmail
		    , CONCAT(COUNT(o.orders_no), '건') AS orderCnt
		FROM 
		    payment p
		INNER JOIN 
		    address a ON p.address_no = a.address_no
		INNER JOIN 
		    orders o ON p.payment_no = o.payment_no
		<if test="customerEmail != null">
			<where>
				a.customer_email =  #{customerEmail}
			</where>
		</if>
		GROUP BY p.payment_no
		ORDER BY CASE WHEN p.payment_status = '결제완료' THEN 0 ELSE 1 END, p.create_date DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<select id="selectTotalRowOnPaymentList" parameterType="map" resultType="Integer">
		SELECT COUNT(*)	FROM payment p
		INNER JOIN 
		   (SELECT * FROM address
			<if test="customerEmail != null">
				<where>
					customer_email =  #{customerEmail}
				</where>
			</if>
			) a 
		ON p.address_no = a.address_no
	</select>
	
	<select id="selectPayInfoListByPaymentNo" parameterType="Integer" resultType="Map">
		SELECT
			o.payment_no AS paymentNo
			, o.orders_no AS ordersNo
			, gc.goods_no AS goodsNo
			, gc.category_no AS categoryNo
			, o.orders_amount AS ordersAmount
			, gc.goods_title AS goodsTitle
			, gc.goods_memo AS goodsMemo
			, gc.goods_price AS goodsPrice
			, gc.goods_status AS goodsStatus
			, gc.category_title AS categoryTitle
			, gc.goodsFileName AS goodsFileName
			, gc.goodsFileExt AS goodsFileExt
			, gc.goodsFileNo AS goodsFileNo
		FROM orders o
		INNER JOIN 
			(SELECT
				g.goods_title goods_title
			   , g.goods_memo goods_memo
			   , g.goods_price goods_price
			   , g.goods_status goods_status
				, gc.goods_no goods_no
				, ct.category_no category_no
			   , ct.category_title category_title
			   , IFNULL(gf.goods_file_name, 'no file') goodsFileName
			   , gf.goods_file_ext goodsFileExt
			   , gf.goods_file_no goodsFileNo
			FROM category ct
			INNER JOIN goods_category gc ON gc.category_no = ct.category_no
			INNER JOIN goods g ON gc.goods_no = g.goods_no
			LEFT outer JOIN goods_file  gf ON gc.goods_no = gf.goods_no) gc
		ON o.goods_no = gc.goods_no
		WHERE o.payment_no = #{paymentNo}
	</select>
	
	<update id="updatePaymentStatus" parameterType="com.example.mall.vo.Payment">
		UPDATE payment SET payment_status = #{paymentStatus}
		WHERE payment_no
		 = (SELECT paymentNo
		 	 FROM (SELECT p.payment_no paymentNo
				   FROM payment p
				   INNER JOIN address a	ON p.address_no = a.address_no
  				   <where>
				   		p.payment_no = #{paymentNo}
					   <if test="customerEmail != null">
						 	 AND a.customer_email = #{customerEmail}
					   </if>
				   </where>
				   ) AS target);
	</update>
	
	
</mapper>
