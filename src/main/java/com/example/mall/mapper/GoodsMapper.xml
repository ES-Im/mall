<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mall.mapper.GoodsMapper">

	<!-- Author : 김문정 --> 
	<!-- getGoodsOne : 상품 상세보기 -->
	<select id="selectGoodsOne" parameterType="Integer" resultType="com.example.mall.vo.Goods">
		SELECT goods_no goodsNo
			, goods_title goodsTitle
			, goods_memo goodsMemo
			, goods_price goodsPrice
			, goods_status goodsStatus
			, update_date updateDate
			, create_date createDate
		FROM goods
		WHERE goods_no = #{goodsNo}
	</select>
	
	<!-- getGoodsOne : 후기 리스트 -->
	<select id="selectBoardListByGoodsNo" parameterType="Integer" resultType="map">
		SELECT b.orders_no ordersNo
				, b.board_content boardContent
				, b.create_date createDate
				, acpo.orders_no ordersNo
				, acpo.goods_no goodsNo
				, acpo.payment_no paymentNo
				, acpo.customer_email customerEmail
		FROM board b INNER JOIN (SELECT o.orders_no
										, o.goods_no
										, o.payment_no
										, acp.customer_email
									FROM orders o INNER JOIN (SELECT p.payment_no
																	, ac.customer_email
																FROM payment p INNER JOIN (SELECT a.address_no 
																								, c.customer_email 
																							FROM address a INNER JOIN customer c 
																							ON a.customer_email = c.customer_email) ac
																ON p.address_no = ac.address_no) acp
									ON o.payment_no = acp.payment_no) acpo
		ON b.orders_no = acpo.orders_no
		WHERE goods_no = #{goodsNo}
	</select>
	
	<!-- getGoodsOne : 후기 작성 가능한 회원 조회 -->
	<select id="selectEligibleReviewers" parameterType="map" resultType="map">
		SELECT result.ordersNo ordersNo
			 , result.customer_Email customerEmail
			 , IFNULL(result.orders_no,-1) boardOrdersNo
			 , result.goods_no goodsNo
			 , result.payment_no paymentNo
			 , result.payment_status paymentStatus  
		FROM (
			    SELECT 
			        o.orders_no AS `ordersNo`
					  , c.customer_email
					  , b.orders_no
					  , o.goods_no
					  , p.payment_no
					  , p.payment_status
			    FROM orders o
							   INNER JOIN payment p ON p.payment_no = o.payment_no
							   INNER JOIN address a ON a.address_no = p.address_no
							   INNER JOIN customer c ON c.customer_email = a.customer_email
		    				   LEFT OUTER JOIN board b ON b.orders_no = o.orders_no
			    WHERE NOT EXISTS (
							        SELECT 1
							        FROM board b2
							        INNER JOIN orders o2 ON b2.orders_no = o2.orders_no
							        WHERE o2.orders_no = o.orders_no
							    	)
			    UNION ALL
			    SELECT 
			      	  o.orders_no 
					  , c.customer_email
					  , b.orders_no 
					  , o.goods_no
					  , p.payment_no
					  , p.payment_status
			    FROM orders o
							   INNER JOIN payment p ON p.payment_no = o.payment_no
							   INNER JOIN address a ON a.address_no = p.address_no
							   INNER JOIN customer c ON c.customer_email = a.customer_email
							   LEFT JOIN board b ON b.orders_no = o.orders_no
			    WHERE EXISTS (
						        SELECT 1
						        FROM board b2
						        INNER JOIN orders o2 ON b2.orders_no = o2.orders_no
						        WHERE o2.orders_no = o.orders_no
							   )
			) result
		<where>
			<if test="loginCustomer != null">
				result.customer_email = #{loginCustomer}
				AND result.payment_status = '배송완료'
				AND IFNULL(result.orders_no, -1) = -1
				AND result.goods_no = #{goodsNo}
						
			</if>
		</where>
		ORDER BY ordersNo ASC
	</select>
	
	<!-- selectGoodsListByStaff Query : 관리자 페이지 상품 리스트 -->
	<select id="selectGoodsListByStaff" parameterType="Map" resultType="Map">
		SELECT 
			g.goods_no goodsNo, g.goods_title goodsTitle, g.goods_memo goodsMemo, g.goods_price goodsPrice, 
			g.goods_status goodsStatus, g.update_date updateDate, g.create_date createDate,
		 	c.category_title categoryTitle, gf.goods_file_no goodsFileNo, gf.goods_file_name goodsFileName, 
		 	gf.goods_file_origin_name goodsOriginName, gf.goods_file_ext goodsFileExt,
		 	gf.goods_file_type goodsFileType, gf.goods_file_size goodsFileSize
		FROM goods g
		INNER JOIN goods_category gc ON g.goods_no = gc.goods_no
		INNER JOIN category c ON gc.category_no = c.category_no
		LEFT JOIN goods_file gf ON g.goods_no = gf.goods_no
		<where>
	        <if test="searchWord != null and searchWord != ''">
            	g.goods_title LIKE CONCAT('%', #{searchWord}, '%')
            	OR 
            	g.goods_memo LIKE CONCAT('%', #{searchWord}, '%')
	        </if>
    	</where>
		ORDER BY g.update_date DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- selectCountGoods Query : 관리자 페이지 상품 리스트 lastPage 위한 Count -->
	<select id="selectCountGoods" resultType="Integer">
		SELECT COUNT(*) FROM goods
		<where>
	        <if test="searchWord != null and searchWord != ''">
            	g.goods_title LIKE CONCAT('%', #{searchWord}, '%')
            	OR 
            	g.goods_memo LIKE CONCAT('%', #{searchWord}, '%')
	        </if>
    	</where>
	</select>
	
	
	

	<!-- home : 메인 페이지 상품 리스트 출력 -->
	<select id="selectGoodsList" parameterType="map" resultType="com.example.mall.vo.Goods">
		SELECT goods_no goodsNo
			, goods_title goodsTitle
			, goods_memo goodsMemo
			, goods_price goodsPrice
			, goods_status goodsStatus
			, update_date updateDate
			, create_date createDate
		FROM goods
		<where>
			<if test="searchWord != null">
				goods_title LIKE CONCAT( '%', #{searchWord} ,'%' )
			</if>
		</where>
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- home : paging을 위한 lastPage -->
	<select id="selectGoodsListLastPage" resultType="Integer">
		SELECT COUNT(*)
		FROM goods
		<where>
			<if test="searchWord != null">
				goods_title LIKE CONCAT( '%', #{searchWord} ,'%' )
			</if>
		</where>
	</select>


</mapper>